---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=movie_api_key&language=en-US&page=1&query=The%20Patriot
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.1.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 04 Feb 2022 03:58:48 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 48ea53c7edffa2cdbdc32f7d94966344.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - g0vnnf1S7NBMYCEPtFrUVmMuDSeslcctynTsjktzXd5dphiWAaw2UQ==
      Age:
      - '179'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoxLCJyZXN1bHRzIjpbeyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvYzl4U0ZaUXRDNGMxNlZuNUNNT2FCMXBHazlKLmpwZyIsImdlbnJlX2lkcyI6WzE4LDM2LDEwNzUyLDI4XSwiaWQiOjIwMjQsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBQYXRyaW90Iiwib3ZlcnZpZXciOiJBZnRlciBwcm92aW5nIGhpbXNlbGYgb24gdGhlIGZpZWxkIG9mIGJhdHRsZSBpbiB0aGUgRnJlbmNoIGFuZCBJbmRpYW4gV2FyLCBCZW5qYW1pbiBNYXJ0aW4gd2FudHMgbm90aGluZyBtb3JlIHRvIGRvIHdpdGggc3VjaCB0aGluZ3MsIHByZWZlcnJpbmcgdGhlIHNpbXBsZSBsaWZlIG9mIGEgZmFybWVyLiBCdXQgd2hlbiBoaXMgc29uIEdhYnJpZWwgZW5saXN0cyBpbiB0aGUgYXJteSB0byBkZWZlbmQgdGhlaXIgbmV3IG5hdGlvbiwgQW1lcmljYSwgYWdhaW5zdCB0aGUgQnJpdGlzaCwgQmVuamFtaW4gcmVsdWN0YW50bHkgcmV0dXJucyB0byBoaXMgb2xkIGxpZmUgdG8gcHJvdGVjdCBoaXMgc29uLiIsInBvcHVsYXJpdHkiOjM1LjY5LCJwb3N0ZXJfcGF0aCI6Ii9mV1pkODE1UXhVQ1VjcldRWndVa0FwOWxqRy5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDAwLTA2LTI4IiwidGl0bGUiOiJUaGUgUGF0cmlvdCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjEsInZvdGVfY291bnQiOjMwMzd9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2pnbmZTeXJ0b25rNVUyVU1QN01MdGdYMmVZdC5qcGciLCJnZW5yZV9pZHMiOlsyOCw1M10sImlkIjo2MDU4LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgUGF0cmlvdCIsIm92ZXJ2aWV3IjoiQSBkZWFkbHkgdmlydXMgdGhyZWF0ZW5zIHRvIHdpcGUgb3V0IGFuIGVudGlyZSBSb2NreSBNb3VudGFpbiB0b3duLCBsZWF2aW5nIHRoZSB0b3duIGRvY3RvciB0byBmaW5kIHNvbWUgd2F5IHRvIGVzY2FwZSB0aGUgc29sZGllcnMgd2hvIGVuZm9yY2UgdGhlIHRvd24ncyBxdWFyYW50aW5lIGFuZCBkZXZpc2UgYW4gYW50aWRvdGUuIE1hdHRlcnMgdGFrZSBhIG1vcmUgZGVhZGx5IHR1cm4gYWZ0ZXIgdGhlIHBoeXNpY2lhbiBpcyBjYXB0dXJlZCBieSBhIGRhbmdlcm91c2x5IHVuc3RhYmxlIGJhbmQgb2YgbWlsaXRpYSBleHRyZW1pc3RzLiIsInBvcHVsYXJpdHkiOjE0Ljc2OSwicG9zdGVyX3BhdGgiOiIvdjNmbjJtRE9HVU5MNXVFbjRBMjZMY2N4U1ZZLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5OTgtMDctMTAiLCJ0aXRsZSI6IlRoZSBQYXRyaW90IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjUuMiwidm90ZV9jb3VudCI6MjA1fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9xT3RNV2hyWnBxWHNSdHUyVkxEdENEcEY4WEMuanBnIiwiZ2VucmVfaWRzIjpbMThdLCJpZCI6ODM5OTAsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBQYXRyaW90Iiwib3ZlcnZpZXciOiJJbiAxOHRoLUNlbnR1cnkgUnVzc2lhLCB0aGUgQ3phciwgUGF1bCwgaXMgc3Vycm91bmRlZCBieSBtdXJkZXJvdXMgcGxvdHMgYW5kIHRydXN0cyBvbmx5IENvdW50IFBhaGxlbi4gUGFobGVuIHdpc2hlcyB0byBwcm90ZWN0IGhpcyBmcmllbmQsIHRoZSBtYWQga2luZywgYnV0IGJlY2F1c2Ugb2YgdGhlIGhvcnJvciBvZiB0aGUga2luZydzIGFjdHMsIGhlIGZlZWxzIHRoYXQgaGUgbXVzdCByZW1vdmUgaGltIGZyb20gdGhlIHRocm9uZS4iLCJwb3B1bGFyaXR5IjoyLjc2MywicG9zdGVyX3BhdGgiOiIvOUw1bWhPYmg0MmpSSEJCdEhaMko3ZUM0UlR0LmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5MjgtMDktMDEiLCJ0aXRsZSI6IlRoZSBQYXRyaW90IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjUsInZvdGVfY291bnQiOjN9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOlsxOF0sImlkIjoxMDkxMTQsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBQYXRyaW90Iiwib3ZlcnZpZXciOiJBZ2VudCB0cmllcyB0byB0cmFjayBkb3duIHRlcnJvcmlzdHMgd2hvIGFyZSBpbnRlcmNlcHRpbmcgZ292ZXJubWVudCBudWNsZWFyIHdlYXBvbnMuIiwicG9wdWxhcml0eSI6MS45NiwicG9zdGVyX3BhdGgiOiIvazR6aUx6bVVuMThBTzVaaEw5REJzN2ZZcjZWLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5ODYtMDctMjUiLCJ0aXRsZSI6IlRoZSBQYXRyaW90IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjMuNSwidm90ZV9jb3VudCI6Mn0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6Wzk5LDE4LDEwNzUyXSwiaWQiOjY4NDM2MSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGhlIFBhdHJpb3Q6IFRoZSBBcnQgb2YgV2FyIiwib3ZlcnZpZXciOiJBIDEwIG1pbnV0ZSBmZWF0dXJldHRlIHRoYXQgZGV0YWlscyB0aG91Z2h0cyBmcm9tIHRoZSBjYXN0IGFuZCBjcmV3IGFib3V0IHRoZSByZWFsaXR5IG9mIHRoZSBiYXR0bGVzIHNob3duIGluIHRoZSBmaWxtIGFuZCBhbHNvLCBob3cgdGhlc2Ugc2NlbmVzIHdlcmUgZmlsbWVkLiBJdCBtYWtlcyBmb3IgbW9kZXJhdGVseSBpbnRlcmVzdGluZyB2aWV3aW5nLCBlc3BlY2lhbGx5IGhlYXJpbmcgYWJvdXQgc29tZSBvZiB0aGUgZGV0YWlscywgc3VjaCBhcyB0aGUgbWFzc2l2ZSBhbW91bnQgb2YgZXh0cmFzIGFuZCBlcXVpcG1lbnQgbmVlZGVkLiIsInBvcHVsYXJpdHkiOjEuNzI1LCJwb3N0ZXJfcGF0aCI6Ii9zNGhnS2h0U2s4QnhuMHBnaEpKbHVmV3VlWWguanBnIiwicmVsZWFzZV9kYXRlIjoiMjAwMC0xMC0yNCIsInRpdGxlIjoiVGhlIFBhdHJpb3Q6IFRoZSBBcnQgb2YgV2FyIiwidmlkZW8iOnRydWUsInZvdGVfYXZlcmFnZSI6Ni4zLCJ2b3RlX2NvdW50Ijo2fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9vTWJqQTRWVG01TFdKTWZSbnJmaEpFSk1BcE0uanBnIiwiZ2VucmVfaWRzIjpbMzddLCJpZCI6NjczNjI3LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgUGF0cmlvdCIsIm92ZXJ2aWV3IjoiRmFtaWx5IHJlbGF0aW9uc2hpcHMgb2YgYSBOZXcgTWV4aWNvIGZhbWlseSAgYXJlIGp1c3Qgb25lIHBhcnQgb2YgdGhpcyBzaWxlbnQgY293Ym95IHdlc3Rlcm4gYWJvdXQgYSB3YXIgdmV0ZXJhbiB3aG8gZmluZHMgYSBnb2xkbWluZS4gIEhlIHdhbnRzIHRvIGVhcm4gZW5vdWdoIG1vbmV5IHRvIHRha2UgY2FyZSBvZiBoaXMgeW91bmcgc29uLCBidXQgY3Jvb2tlZCBvZmZpY2lhbHMgc3dpbmRsZSBoaW0gb3V0IG9mIHRoZSBtaW5lLCBhbmQgdGhlbiBoaXMgc29uIGlzIGtpbGxlZC4gIEhlIHN3ZWFycyB2ZW5nZWFuY2UgYW5kIGpvaW5zIHVwIHdpdGggTWV4aWNhbiBiYW5kaXQsIFwiUGFuY2hvIFphcGlsbGFcIiwgd2hvIGludGVuZHMgdG8gZGVzdHJveSBoaXMgd2hvbGUgdG93bi4iLCJwb3B1bGFyaXR5IjowLjYyNywicG9zdGVyX3BhdGgiOiIvUDljTzV0c3Fra081dVBjaVJZOUpuVU1jQncuanBnIiwicmVsZWFzZV9kYXRlIjoiMTkxNi0wMy0wOSIsInRpdGxlIjoiVGhlIFBhdHJpb3QiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6MCwidm90ZV9jb3VudCI6MH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvMW16YXhtbEFjU0xpQVk4Vmw3YVpJZnFWNFpnLmpwZyIsImdlbnJlX2lkcyI6Wzk5XSwiaWQiOjIxODk5NCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGhlIFBhdHJpb3QgR2FtZSIsIm92ZXJ2aWV3IjoiVGhlIGZpbG0ncyBpbnRyb2R1Y3Rpb24gY292ZXJzIElyZWxhbmQncyBoaXN0b3J5IGZyb20gQnJpdGlzaCBjb2xvbml6YXRpb24gdG8gdGhlIHRlcnJpdG9yeSdzIGRpdmlzaW9uIGluIDE5MjIuIFRIRSBQQVRSSU9UIEdBTUUgdGhlbiBkZXRhaWxzIHRoZSBldmVudHMgb2YgdGhlIGRlY2FkZSB0aGF0IGJlZ2FuIGluIDE5NjguIFRocm91Z2ggcG93ZXJmdWwgcG9ydHJhaXRzIG9mIHJlYmVsbGlvbiBhbmQgZXlld2l0bmVzcyBhY2NvdW50cyBvZiBraWxsaW5ncyBhbmQgc3VjaCBtYXNzYWNyZXMgYXMgdGhlIGluZmFtb3VzIFwiQmxvb2R5IFN1bmRheSxcIiB0aGUgZmlsbSBzaG93cyB0aGUgSVJBIGF0IHdvcmsgLSBtdWNoIG9mIGl0IGZpbG1lZCBjbGFuZGVzdGluZWx5IC0gYXMgdGhleSBhcmd1ZSB0aGVpciBjYXVzZSB3aGljaCwgaW4gdGhpcyBjb3VudHJ5IGFuZCBpbiBtb3N0IG9mIHRoZSB3b3JsZCwgaGFzIGdvbmUgdW5oZWFyZC4iLCJwb3B1bGFyaXR5IjowLjYsInBvc3Rlcl9wYXRoIjoiLzk5Q1dBcG9kTTlBNW1IbGhod29QbDd2U01oTS5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTc5LTA2LTAxIiwidGl0bGUiOiJUaGUgUGF0cmlvdCBHYW1lIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcsInZvdGVfY291bnQiOjd9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOls5OSwxOCwxMDc1Ml0sImlkIjo2ODQzNjcsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBQYXRyaW90OiBUcnVlIFBhdHJpb3RzIiwib3ZlcnZpZXciOiJBIGZlYXR1cmV0dGUgdGhhdCBzaG93cyBob3cgdGhlIGZpbG1tYWtlcnMgdHJpZWQgdG8gYWNjdXJhdGVseSByZS1jcmVhdGUgdGhlIGxvb2sgb2YgdGhhdCB0aW1lIGluIGhpc3RvcnkuIiwicG9wdWxhcml0eSI6MC42LCJwb3N0ZXJfcGF0aCI6Ii9zNGhnS2h0U2s4QnhuMHBnaEpKbHVmV3VlWWguanBnIiwicmVsZWFzZV9kYXRlIjoiMjAwMC0xMC0yNCIsInRpdGxlIjoiVGhlIFBhdHJpb3Q6IFRydWUgUGF0cmlvdHMiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Niwidm90ZV9jb3VudCI6MX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvcjVXRDJZWWtScmU5ZjZkQXhqR2RQMzgxQnRjLmpwZyIsImdlbnJlX2lkcyI6W10sImlkIjo3MjY5MDEsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkJlaGluZCBUaGUgTWFzazogRGVsIOKAnFRoZSBQYXRyaW904oCdIFdpbGtlcyIsIm92ZXJ2aWV3IjoiQmVoaW5kIFRoZSBNYXNrOiBEZWwg4oCcUGF0cmlvdOKAnSBXaWxrZXMgc3RvcnkgY2hyb25pY2xlcyB0aGUgbGlmZSBhbmQgY2FyZWVyIG9mIG9uZSBvZiB3cmVzdGxpbmfigJlzIG1vc3QgbWVtb3JhYmxlIG1hc2tlZCBtZW4uIFRoaXMgZG9jdW1lbnRhcnkgbm90IG9ubHkgaGlnaGxpZ2h0cyBEZWzigJlzIHN1Y2Nlc3MgaW4gdGhlIHdvcmxkIG9mIHByb2Zlc3Npb25hbCB3cmVzdGxpbmcgYnV0IGl0IGFsc28gZG9jdW1lbnRzIGhpcyBpbXByZXNzaXZlIGNhcmVlciBvbiB0aGUgZ3JpZGlyb24gYXQgdGhlIFVuaXZlcnNpdHkgb2YgU291dGggQ2Fyb2xpbmEuICBCZWhpbmQgVGhlIE1hc2s6IERlbCDigJxQYXRyaW904oCdIFdpbGtlcyBpcyBhIHN0b3J5IG9mIHRyZW1lbmRvdXMgc3VjY2VzcywgbWlzdGFrZXMsIGFuZCByZWRlbXB0aW9uLiIsInBvcHVsYXJpdHkiOjAuNiwicG9zdGVyX3BhdGgiOiIvdzNRaFdzRDhOYW5WUUdPSFFyTVFwZlVKUDUuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxNS0wOC0wNyIsInRpdGxlIjoiQmVoaW5kIFRoZSBNYXNrOiBEZWwg4oCcVGhlIFBhdHJpb3TigJ0gV2lsa2VzIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjAsInZvdGVfY291bnQiOjB9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOlsxMiwxMDc1MV0sImlkIjoxNTA3NzMsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBMaXR0bGUgUGF0cmlvdCIsIm92ZXJ2aWV3IjoiSm9pbiBpbiBvbmUgYm95J3MgaGVyb2ljIGFkdmVudHVyZSBhcyBoZSBmaWdodHMgaW4gdGhlIHN0cnVnZ2xlIGZvciBmcmVlZG9tIG9uIHRoZSBBbWVyaWNhbiBmcm9udGllci4gSmFtZXMgVG9kZCBpcyBhIHlvdW5nIGJveSBncm93aW5nIHVwIGluIHRoZSBob3N0aWxlIEFtZXJpY2FuIHdpbGRlcm5lc3MtYSBydWdnZWQgYW5kIGRhbmdlcm91cyBsYW5kIGFsc28gaW5oYWJpdGVkIGJ5IHRoZSBBbWVyaWNhbiBJbmRpYW5zLiBIaXMgcGVhY2VmdWwgbGlmZSBpcyBzaGF0dGVyZWQgd2hlbiB0aGUgdHJlYWNoZXJvdXMgQnJpdGlzaCB0cm9vcHMgc3VkZGVubHkgc3Rvcm0gdGhyb3VnaCB0aGUgY291bnRyeXNpZGUgaW4gYW4gYXR0ZW1wdCB0byBjcnVzaCB0aGUgQW1lcmljYW4gUmV2b2x1dGlvbi4gRHVyaW5nIHRoZSBiYXR0bGUgZm9yIGZyZWVkb20sIEphbWVzIGlzIHJ1dGhsZXNzbHkgY2FwdHVyZWQgYW5kIGhlbGQgcHJpc29uZXIgaW4gdGhlIGVuZW15IGZvcnQgYnkgdGhlIGJydXRhbCBNYWpvciBTbXl0aGUuIEJ1dCBoaXMgYnJhdmVyeSBzZWVtcyB3aXRob3V0IGxpbWl0cyBhcyBhbiB1bmxpa2VseSBhbmQgbGVnZW5kYXJ5IGFsbGlhbmNlIGlzIGZvcmdlZCB3aXRoIHRoZSBuZWlnaGJvcmluZyBJbmRpYW5zIGluIGEgYm9sZCBhbmQgZmVhcmxlc3MgcmVzY3VlIGVmZm9ydC4gSXQgaXMgYSBydWdnZWQgYW5kIHdvbmRyb3VzIGFkdmVudHVyZSB3aGljaCBjdWxtaW5hdGVzIGFzIHRoZSBmb3J0cmVzcyBpcyBpbmZpbHRyYXRlZCBhbmQgSmFtZXMgbmFycm93bHkgZXNjYXBlcyB0byBsZWFkIHRoZSBzcGlyaXRlZCBmaWdodCBhZ2FpbnN0IHRoZSBCcml0aXNoIFJlZCBDb2F0cy4iLCJwb3B1bGFyaXR5IjowLjYsInBvc3Rlcl9wYXRoIjoiLzRONVZyZWF0SGo5a3RWYm1sOFd0aENNNnFiMi5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTk1LTAzLTI4IiwidGl0bGUiOiJUaGUgTGl0dGxlIFBhdHJpb3QiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6MCwidm90ZV9jb3VudCI6MH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6W10sImlkIjo5MTMzODEsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBTdW5zaGluZSBQYXRyaW90Iiwib3ZlcnZpZXciOiJBbiBBbWVyaWNhbiBzcHkgdHJpZXMgZGVzcGVyYXRlbHkgdG8gZ2V0IG91dCBmcm9tIGJlaGluZCB0aGUgSXJvbiBDdXJ0YWluIHdpdGggc29tZSBjcnVjaWFsIG1pY3JvZmlsbSB3aXRoIHRoZSBDb21tdW5pc3Qgc2VjdXJpdHkgcG9saWNlIGNsb3NlIG9uIGhpcyBoZWVscy4iLCJwb3B1bGFyaXR5IjowLjYsInBvc3Rlcl9wYXRoIjpudWxsLCJyZWxlYXNlX2RhdGUiOiIxOTY4LTEyLTE2IiwidGl0bGUiOiJUaGUgU3Vuc2hpbmUgUGF0cmlvdCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjowLCJ2b3RlX2NvdW50IjowfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiZ2VucmVfaWRzIjpbMTgsODBdLCJpZCI6MTYyNDIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZnIiLCJvcmlnaW5hbF90aXRsZSI6IkxlcyBQYXRyaW90ZXMiLCJvdmVydmlldyI6IkFyaWVsLCBhIHlvdW5nIEZyZW5jaCBKZXcsIGRlY2lkZXMgdG8gbGVhdmUgaGlzIGZhbWlseSB0byBnbyB0byBJc3JhZWwgYW5kIHNlY3JldGx5IGJlY29tZSBhbiBhZ2VudCBvZiBNb3NzYWQsIHRoZSBJc3JhZWxpIHNlY3JldCBzZXJ2aWNlLiBBZnRlciB5ZWFycyBvZiB0cmFpbmluZywgaGlzIGZpcnN0IG1pc3Npb24gaXMgaW4gUGFyaXMgdG8gc3RlYWwgc2VjcmV0cyBmcm9tIFJlbXkgUHJpZXVyLCBhIEZyZW5jaCBhdG9taWMgc2NpZW50aXN0LiIsInBvcHVsYXJpdHkiOjUuMDc5LCJwb3N0ZXJfcGF0aCI6Ii95YWJVcnl0VlIxM3VTYkltdklkTmFhc045MlkuanBnIiwicmVsZWFzZV9kYXRlIjoiMTk5NC0wNi0wMSIsInRpdGxlIjoiVGhlIFBhdHJpb3RzIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuNSwidm90ZV9jb3VudCI6Mzl9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzRWNUl6anN2UVM2TlBFMkxMcGE0elJDS0lKYS5qcGciLCJnZW5yZV9pZHMiOlszNV0sImlkIjoyMjgzOTYsIm9yaWdpbmFsX2xhbmd1YWdlIjoicHQiLCJvcmlnaW5hbF90aXRsZSI6IlBvbGljYXJwbyBRdWFyZXNtYSwgSGVyw7NpIGRvIEJyYXNpbCIsIm92ZXJ2aWV3IjoiUG9saWNhcnBvIGlzIGEgY2hhdXZpbmlzdGljIHBhdHJpb3QsIGEgbWFqb3Igd2hvIHRyaWVzIHRvIGZpbmQgc29sdXRpb25zIGZvciBCcmF6aWxpYW4gcHJvYmxlbXMgdXNpbmcgb25seSB0aGUgcmVzb3VyY2VzIG9mIGhpcyBvd24gY291bnRyeS4gSGlzIHZpc2lvbmFyeSBhbmQgaWRlYWxpc3RpYyB0ZW1wZXJhbWVudCBpcyBiZWhpbmQgaGlzIHN0cmFuZ2UgaWRlYXMgYWJvdXQgaG93IHRvIGJ1aWxkIGEgZ3JlYXQgbmF0aW9uLiIsInBvcHVsYXJpdHkiOjAuNiwicG9zdGVyX3BhdGgiOiIvdmV6ZGE1RGM1M0h2MENpemUzck5KQVVhTDFZLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5OTgtMDQtMjkiLCJ0aXRsZSI6IlRoZSBQYXRyaW90IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjQuNiwidm90ZV9jb3VudCI6NH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6WzE4LDEwNzUyXSwiaWQiOjM4NDYxNSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJicyIsIm9yaWdpbmFsX3RpdGxlIjoiUGF0cmlvdCIsIm92ZXJ2aWV3IjoiQXQgdGhlIGJlZ2lubmluZyBvZiBCb3NuaWFuIHdhciBpbiBvbmUgdmlsbGFnZSwgdHdvIFNlcmJpYW4gc29sZGllcnMgY2FwdHVyZSB0d28gb2YgdGhlaXIgTXVzbGltIG5laWdoYm9ycyBhbmQgdGFrZSB0aGVtIHRvIHNob290aW5nLiIsInBvcHVsYXJpdHkiOjAuNiwicG9zdGVyX3BhdGgiOm51bGwsInJlbGVhc2VfZGF0ZSI6IjIwMTEtMDUtMTQiLCJ0aXRsZSI6IlRoZSBQYXRyaW90IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjAsInZvdGVfY291bnQiOjB9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOlsxMDc1MiwxOF0sImlkIjo1MDc1NDIsIm9yaWdpbmFsX2xhbmd1YWdlIjoic2wiLCJvcmlnaW5hbF90aXRsZSI6IlBhdHJpb3QiLCJvdmVydmlldyI6Ik5BVE8gcHJlcGFyZXMgYSBnbG9iYWwgcGxhbiBhcyBhIHByb3RlY3Rpb24gb2YgQ2VudHJhbCBFdXJvcGUsIHdoaWNoIGlzIHdoeSB0aGV5IHNldCB1cCBhbiBhZXJpYWwgZGVmZW5zZSBzeXN0ZW0gaW4gU2xvdmVuaWEgbmFtZWQgYXMgVGhlIFBhdHJpb3QuIEludGVybmF0aW9uYWwgdGVycm9yaXN0IG9yZ2FuaXphdGlvbiBhdHRlbXB0cyB0byBkZXN0cm95IGl0IHRvZ2V0aGVyIHdpdGggdGhlIG51Y2xlYXIgcG93ZXIgcGxhbnQuIEFuIGV4LWNyaW1pbmFsIHdobydzIGluIGNoYXJnZSBvZiBUaGUgUGF0cmlvdCwgdHJpZXMgdG8gcHJldmVudCB0aGlzIGNhdGFzdHJvcGhlIGFuZCBhbHNvIHN0b3AgdGhlIGludGVybmFsIGVuZW1pZXMuIiwicG9wdWxhcml0eSI6MC42LCJwb3N0ZXJfcGF0aCI6bnVsbCwicmVsZWFzZV9kYXRlIjoiMTk5OC0wMS0wMSIsInRpdGxlIjoiVGhlIFBhdHJpb3QiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6MCwidm90ZV9jb3VudCI6MH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvY29mcjRRZGJnT3ZZNDBQZHZFZjNnR3VuNTg2LmpwZyIsImdlbnJlX2lkcyI6Wzk5XSwiaWQiOjU4ODk1OCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJkZSIsIm9yaWdpbmFsX3RpdGxlIjoiRGVyIFBhdHJpb3QiLCJvdmVydmlldyI6IkF0IHRoZSBhZ2Ugb2YgMjEsIFZhc2lseSBWbGFzb3YgYmVjYW1lIHRoZSB5b3VuZ2VzdCBwYXJsaWFtZW50YXJpYW4gaW4gdGhlIFJ1c3NpYW4gRHVtYS4gR2l2ZW4gaGlzIGFidW5kYW50IGNvbmZpZGVuY2UgYW5kIHNlbGYtYXNzdXJlZCBtYW5uZXIsIGhlIGNvdWxkIGhhdmUgYmVlbiBhIHJlZnJlc2hpbmcgbmV3IHZvaWNlLiIsInBvcHVsYXJpdHkiOjAuNiwicG9zdGVyX3BhdGgiOiIvb0JWRnBmbjJUbG1NcjFtQ0xYQjdoMTVtWHpELmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTgtMTEtMTgiLCJ0aXRsZSI6IlRoZSBQYXRyaW90IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjAsInZvdGVfY291bnQiOjB9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOls5OV0sImlkIjo3NDE3MjAsIm9yaWdpbmFsX2xhbmd1YWdlIjoicnUiLCJvcmlnaW5hbF90aXRsZSI6ItCf0LDRgtGA0LjQvtGCIiwib3ZlcnZpZXciOiJBIGZpbG0gYWJvdXQgdGhlIGxpZmUgYW5kIGZhdGUgb2YgYSByZWFsIFJ1c3NpYW4gcGF0cmlvdC4gQWxsIGhpcyB0aG91Z2h0cywgZHJlYW1zIGFuZCBob3BlcyBhcmUgaW5leHRyaWNhYmx5IGxpbmtlZCB3aXRoIHRoZSBncmVhdG5lc3Mgb2YgdGhlIEZhdGhlcmxhbmQuIEhvd2V2ZXIsIG92ZXIgdGltZSwgY29nbml0aXZlIGRpc3NvbmFuY2Ugc3VkZGVubHkgcGVuZXRyYXRlcyBpbnRvIGhpcyBjb25zY2lvdXNuZXNzLCB3aGljaCBkaWQgbm90IGtub3cgcmVwcm9hY2hlcyBhbmQgZG91YnRzLiBGaW5kaW5nIGhpbXNlbGYgaW4gYSBzZXZlcmUgZXhpc3RlbnRpYWwgY3Jpc2lzLCB0aGUgaGVybyBvZiB0aGUgZmlsbSBwYXJhZG94aWNhbGx5IGFuZCBjb250cmFkaWN0b3J5IHJldGhpbmtzIHRoZSBjb25jZXB0IG9mIHBhdHJpb3Rpc20uIiwicG9wdWxhcml0eSI6MC42LCJwb3N0ZXJfcGF0aCI6Ii95ZTJqc1JSYzNvN1AyYUJoVE5WZE1GekhHZ0kuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMC0wMS0xMCIsInRpdGxlIjoiVGhlIFBhdHJpb3QiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6MCwidm90ZV9jb3VudCI6MH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6WzE4XSwiaWQiOjEyNDU5NCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJkZSIsIm9yaWdpbmFsX3RpdGxlIjoiRGllIFBhdHJpb3RpbiIsIm92ZXJ2aWV3IjoiR2FiaSBUZWljaGVydCwgYSBoaXN0b3J5IHRlYWNoZXIsIGlzIHVuaGFwcHkgd2l0aCB0aGUgd2F5IGhpc3RvcnkgaXMgcG9ydHJheWVkIGluIHRleHRib29rcyBhbmQgaXMgbG9va2luZyBmb3IgYW4gYWx0ZXJuYXRpdmUsIG1vcmUgcHJhY3RpY2FsIGFwcHJvYWNoIHRvICd1bmNvdmVyaW5nJyB0aGUgcGFzdCwgcXVpdGUgbGl0ZXJhbGx5IGRpZ2dpbmcgd2l0aCB0aGUgc3BhZGUgYW5kIGRpc3NlY3RpbmcgYm9va3Mgd2l0aCBoYW1tZXJzIGFuZCBkcmlsbHMuIiwicG9wdWxhcml0eSI6MS4zODEsInBvc3Rlcl9wYXRoIjoiL2ljWFNrVGpVcWlGNlpnWkEwTXlJTko0OW5tNy5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTc5LTEyLTA3IiwidGl0bGUiOiJUaGUgUGF0cmlvdGljIFdvbWFuIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuNywidm90ZV9jb3VudCI6Nn0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvNlFjT0MwdlVHd1BwUzM3eGFOa09XUjl1M3g3LmpwZyIsImdlbnJlX2lkcyI6Wzk5LDE4XSwiaWQiOjY2OTcxOSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJmaSIsIm9yaWdpbmFsX3RpdGxlIjoiUGVra2EgU2lpdG9pbWVzdGEgamEgSXPDpG5tYWFsbGlzZXN0YSBLYW5zYW5yaW50YW1hc3RhIiwib3ZlcnZpZXciOiJcIkkgYW0gYSBoYXJkY29yZSByYWNpc3QsIHNhZGlzdCBhbmQgZmFzY2lzdC4gVGhlIE5ldyBUZXN0YW1lbnQgaXMgdHJ1ZSwgdGhlIE9sZCBUZXN0YW1lbnQgaXMgbm90LiBTcGlyaXRzIGluZm9ybWVkIG1lIHRoYXQgSSB3aWxsIGJlIGJvcm4gYWdhaW4gaW4gbXkgbmV4dCBsaWZlIGluIHRoZSBVbml0ZWQgU3RhdGVzLCB0aGVuIGFzIHByZXNpZGVudC5cIiAtIFBla2thIFNpaXRvaW4gKDE5NDQgLSAyMDAzKSB3YXMgYW4gb2NjdWx0aXN0IGFuZCBhIG5lby1OYXppIGZyb20gTmFhbnRhbGksIEZpbmxhbmQuIEluIGhpcyB5b3V0aCBoZSBzdHVkaWVkIGF0IHRoZSBUaGVhdHJlIEFjYWRlbXkgb2YgRmlubGFuZCBhbmQgd2FzIGEgZGlzY2lwbGUgb2YgRmlubGFuZCdzIGJlc3Qga25vd24gY2xhaXJ2b3lhbnQsIEFpbm8gS2Fzc2luZW4uIEluIHRoZSAxOTcwcyBoZSBiZWNhbWUgYSBuZW8tTmF6aSBhbmQgZm91bmRlZCBzZXZlcmFsIG9yZ2FuaXphdGlvbnMuIEhlIHNhdyBoaW1zZWxmIGFzIHRoZSBsZWFkZXIgb2YgdGhlIEZpbm5pc2ggTmF6aSBtb3ZlbWVudCBidXQgZ290IGF0IG1vc3QgYSBmZXcgZG96ZW4gc3VwcG9ydGVycy4gU2lpdG9pbiBhbHNvIHdyb3RlIGJvb2tzIGFib3V0IHBvbGl0aWNzIGFuZCBvY2N1bHRpc20uIiwicG9wdWxhcml0eSI6MC44NCwicG9zdGVyX3BhdGgiOiIvZDBtaFVOQzNJTlR6VGREYnBjdnJHWHFHMENwLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5NzctMTAtMjEiLCJ0aXRsZSI6IlBla2thIFNpaXRvaW4gYW5kIHRoZSBQYXRyaW90aWMgUGVvcGxlJ3MgRnJvbnQiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6MCwidm90ZV9jb3VudCI6MH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6WzE4LDEwNzUyXSwiaWQiOjk0NjM4LCJvcmlnaW5hbF9sYW5ndWFnZSI6InJ1Iiwib3JpZ2luYWxfdGl0bGUiOiLQntC60YDQsNC40L3QsCIsIm92ZXJ2aWV3IjoiT3V0c2tpcnRzIGlzIGFuIGludGVybmF0aW9uYWxseSByZW5vd25lZCBtYXN0ZXJwaWVjZSBvZiBlYXJseSBzb3VuZCBjaW5lbWEuIEluIGEgcmVtb3RlIFJ1c3NpYW4gdmlsbGFnZSBkdXJpbmcgV29ybGQgV2FyIEksIGNvbG9yZnVsIGFuZCBudWFuY2VkIGNoYXJhY3RlcnMgZXhwZXJpZW5jZSBkaXZpZGVkIGxveWFsdGllczogZmFtaWx5IGxveWFsdHkgdnMuIHBlcnNvbmFsIGRlc2lyZSwgbmF0aW9uYWxpc20gdnMuIHRyYW5zY2VuZGVudCBodW1hbmlzbS4iLCJwb3B1bGFyaXR5IjozLjY0MywicG9zdGVyX3BhdGgiOiIvQWV6cmQ0d1oyTGF1SGhFeEV3S01UQkl5MUZlLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5MzMtMDMtMjUiLCJ0aXRsZSI6Ik91dHNraXJ0cyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjcsInZvdGVfY291bnQiOjE4fV0sInRvdGFsX3BhZ2VzIjoyLCJ0b3RhbF9yZXN1bHRzIjoyOH0=
  recorded_at: Fri, 04 Feb 2022 04:01:47 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=movie_api_key&language=en-US&page=2&query=The%20Patriot
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.1.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 04 Feb 2022 03:58:48 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 ec4d04f2befcd6652834fd368a8b671e.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - qAPbGfiLYFbBOk1N2kxAPTCSwW_aadxdQzB-mRKnwufQtU32ekr8WQ==
      Age:
      - '179'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoyLCJyZXN1bHRzIjpbeyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvMURnYU1UU3dzVEc4YlBaYVRQaXpBbldSYlA0LmpwZyIsImdlbnJlX2lkcyI6Wzk5XSwiaWQiOjQxODY5Mywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiTWFyYXRob246IFRoZSBQYXRyaW90cyBEYXkgQm9tYmluZyIsIm92ZXJ2aWV3IjoiUmVjb3VudHMgdGhlIGRyYW1hdGljIHN0b3J5IG9mIHRoZSBBcHJpbCAyMDEzIHRlcnJvcmlzdCBhdHRhY2sgYXQgdGhlIEJvc3RvbiBNYXJhdGhvbiB0aHJvdWdoIHRoZSBleHBlcmllbmNlcyBvZiBpbmRpdmlkdWFscyB3aG9zZSBsaXZlcyB3ZXJlIGFmZmVjdGVkLiBSYW5naW5nIGZyb20gdGhlIGV2ZW50cyBvZiB0aGUgZGF5IHRvIHRoZSBkZWF0aC1wZW5hbHR5IHNlbnRlbmNpbmcgb2YgRHpob2toYXIgVHNhcm5hZXYsIHRoZSBmaWxtIGZlYXR1cmVzIHN1cnZlaWxsYW5jZSBmb290YWdlLCBuZXdzIGNsaXBzLCBob21lIG1vdmllcyBhbmQgZXhjbHVzaXZlIGludGVydmlld3Mgd2l0aCBzdXJ2aXZvcnMgYW5kIHRoZWlyIGZhbWlsaWVzLCBhcyB3ZWxsIGFzIGZpcnN0IHJlc3BvbmRlcnMsIGludmVzdGlnYXRvcnMsIGdvdmVybm1lbnQgb2ZmaWNpYWxzIGFuZCByZXBvcnRlcnMgZnJvbSB0aGUgQm9zdG9uIEdsb2JlLCB3aGljaCB3b24gYSBQdWxpdHplciBQcml6ZSBmb3IgaXRzIGNvdmVyYWdlIG9mIHRoZSBib21iaW5nLiBJbiB0aGUgd2FrZSBvZiB0ZXJyb3Jpc20sIGEgbmV3bHl3ZWQgY291cGxlLCBhIG1vdGhlciBhbmQgZGF1Z2h0ZXIsIGFuZCB0d28gYnJvdGhlcnMgLSBhbGwgZ3JhdmVseSBpbmp1cmVkIGJ5IHRoZSBibGFzdCAtIGZhY2UgdGhlIGNoYWxsZW5nZXMgb2YgcGh5c2ljYWwgYW5kIGVtb3Rpb25hbCByZWNvdmVyeSBhcyB0aGV5IGFuZCB0aGVpciBmYW1pbGllcyBzdHJpdmUgdG8gcmVjbGFpbSB0aGVpciBsaXZlcyBhbmQgY29tbXVuaXRpZXMuIiwicG9wdWxhcml0eSI6My4zODIsInBvc3Rlcl9wYXRoIjoiLzNGajFyZEVSOVhnRnVWcUdlWUpuUGRHdjJXcS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE2LTExLTIxIiwidGl0bGUiOiJNYXJhdGhvbjogVGhlIFBhdHJpb3RzIERheSBCb21iaW5nIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuNywidm90ZV9jb3VudCI6MTh9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOltdLCJpZCI6NjE5MzEyLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgUGF0cmlvdHMiLCJvdmVydmlldyI6IlRoaXMgYWJzb3JiaW5nIDE5NzYgcHJvZHVjdGlvbiBvZiBkcmFtYXRpc3QgU2lkbmV5IEtpbmdzbGV5J3MgaGlzdG9yaWNhbCBwbGF5IGNlbnRlcnMgb24gdGhlIGZvcm1hdGl2ZSBkYXlzIG9mIHRoZSBVbml0ZWQgU3RhdGVzIGFuZCB0aGUgZGlzcHV0ZXMgYmV0d2VlbiBmb3VuZGluZyBmYXRoZXJzIFRob21hcyBKZWZmZXJzb24gYW5kIEFsZXhhbmRlciBIYW1pbHRvbi4gQWx0aG91Z2ggdGhlIHR3byBtZW4gZ3JlYXRseSByZXNwZWN0IGVhY2ggb3RoZXIsIHRoZSBkZWVwLXNlYXRlZCBjbGFzaCBpbiB0aGVpciBpZGVvbG9naWVzIGVuZ2VuZGVycyBjb25mbGljdCBqdXN0IGFzIHRoZSBmbGVkZ2xpbmcgY291bnRyeSBpcyBiZWdpbm5pbmcgdG8gdGFrZSByb290LiIsInBvcHVsYXJpdHkiOjAuNiwicG9zdGVyX3BhdGgiOiIvdXZTUmZqbWZ4bWw2Z29NeUllamNVanNWZUN1LmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5NzYtMDUtMjYiLCJ0aXRsZSI6IlRoZSBQYXRyaW90cyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjowLCJ2b3RlX2NvdW50IjowfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiZ2VucmVfaWRzIjpbMTA3NzAsMTgsMzZdLCJpZCI6ODI3NDY1LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgUGF0cmlvdHMiLCJvdmVydmlldyI6IlRob21hcyBKZWZmZXJzb24gaGFzIGp1c3QgcmV0dXJuZWQgZnJvbSBGcmFuY2UsIGhvcGluZyB0byByZWxheCB3aXRoIGhpcyBkYXVnaHRlcnMgYXQgTW9udGljZWxsby4gR2VvcmdlIFdhc2hpbmd0b24gaG93ZXZlciwgaGFzIGEgZmF2b3IgdG8gYXNrIG9mIGhpbS4gSGl0IGJ5IHRvdWdoIHBvbGl0aWNhbCBvcHBvc2l0aW9uLCBzcGVjaWZpY2FsbHkgYWZyYWlkIG9mIHJpc2luZyBtb25hcmNoIHN0cmVuZ3RoLCBoZSB1cmdlcyBKZWZmZXJzb24gdG8gYmVjb21lIGhpcyBTZWNyZXRhcnkgb2YgU3RhdGUuIEplZmZlcnNvbiBhY2NlcHRzLCBhbGJlaXQgZ3J1ZGdpbmdseS4gTm90IGxvbmcgYWZ0ZXIsIGhlIGlzIGJhdHRsaW5nIGhpcyBhcmNocml2YWwsIEFsZXhhbmRlciBIYW1pbHRvbiwgYSBGZWRlcmFsaXN0IGp1c3QgYmVmb3JlIGhpcyBlbGVjdGlvbiBpbiAxODAwLiIsInBvcHVsYXJpdHkiOjAuNiwicG9zdGVyX3BhdGgiOm51bGwsInJlbGVhc2VfZGF0ZSI6IjE5NjMtMTEtMTUiLCJ0aXRsZSI6IlRoZSBQYXRyaW90cyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjowLCJ2b3RlX2NvdW50IjowfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiZ2VucmVfaWRzIjpbOTldLCJpZCI6OTAwMzMwLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJTdW1tZXIgU291bCwgU3Vuc2hpbmUgUGF0cmlvdCwgYW5kIHRoZSBBbWVyaWNhbiBNZXNzYWdlIiwib3ZlcnZpZXciOiJBIGRvY3VtZW50YXJ5IG92ZXIgdGhlIExpYmVydHkgTWFyY2ggaGVsZCBpbiBXYXNoaW5ndG9uIEQuQy4gaW4gMjAwOC4gSW5jbHVkZXMgc3BlZWNoZXMgYnkgUm9uIFBhdWwsIEFkYW0gS29rZXNoLCBKaW0gR3Vlc3QsIGFuZCBHLiBFZHdhcmQgR3JpZmZpbi4iLCJwb3B1bGFyaXR5IjowLjYsInBvc3Rlcl9wYXRoIjoiL3pBVU51R2xaaE5XaWhBekppM0JUbVJTU2ZBQS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDA4LTEwLTAxIiwidGl0bGUiOiJTdW1tZXIgU291bCwgU3Vuc2hpbmUgUGF0cmlvdCwgYW5kIHRoZSBBbWVyaWNhbiBNZXNzYWdlIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjAsInZvdGVfY291bnQiOjB9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOltdLCJpZCI6MzA1MDYzLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJJbCBzb2dubyBwYXRyaW90dGljbyBkaSBDaW5lc3Npbm8iLCJvdmVydmlldyI6IlRoZSBJdGFsaWFuIGNvbG9uaWFsIHdhciBpbiBMaWJ5YSBhcyBzZWVuIHRocm91Z2ggdGhlIGRyZWFtIG9mIGEgY2hpbGQgd2hvJ3MgZmF0aGVyIGluIGF0IHRoZSBmcm9udC4iLCJwb3B1bGFyaXR5IjowLjYsInBvc3Rlcl9wYXRoIjpudWxsLCJyZWxlYXNlX2RhdGUiOiIxOTE1LTExLTIxIiwidGl0bGUiOiJUaGUgUGF0cmlvdGljIERyZWFtIG9mIENpbmVzc2lubyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjUsInZvdGVfY291bnQiOjF9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2hhajJIamFpZ21TdWR2TmNIRWpqeEVTQm1GVi5qcGciLCJnZW5yZV9pZHMiOlsyOCwxOF0sImlkIjo3MjY4MSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJ6aCIsIm9yaWdpbmFsX3RpdGxlIjoiWmhvbmcgeXVhbiBiaWFvIGp1Iiwib3ZlcnZpZXciOiJCcnVjZSBMaSBzdGFycyBhcyBhIGt1bmcgZnUgZmlnaHRlciB3aG8gd2l0aCBhIGdyb3VwIGZyaWVuZHMgZGVmaWVzIHRoZSBDaGluZyBEeW5hc3R5LCB1c2luZyBoaXMgbWFydGlhbCBhcnRzIGFuZCBzZW5zZSBvZiBob25vciBoZSBzdWNjZWVkcyB0aG91Z2ggbm90IHdpdGhvdXQgc29tZSBwZXJzb25hbCBsb3NzZXMuIiwicG9wdWxhcml0eSI6MS40LCJwb3N0ZXJfcGF0aCI6Ii95YzZHMWQ4OFBjNUx0ZUdod0dMRk9VZFQ5UnkuanBnIiwicmVsZWFzZV9kYXRlIjoiMTk3Ni0wMS0wMSIsInRpdGxlIjoiVGhlIE1pbmcgUGF0cmlvdHMiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6NC45LCJ2b3RlX2NvdW50Ijo0fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiZ2VucmVfaWRzIjpbXSwiaWQiOjMwNTA2Miwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJ4eCIsIm9yaWdpbmFsX3RpdGxlIjoiSWwgcGljY29sbyBwYXRyaW90YSBwYWRvdmFubyIsIm92ZXJ2aWV3IjoiT24gYSBzaGlwIGJvdW5kIGZvciBHZW5vYSB0aGVyZSBpcyBhIGJveSBpbiByYWdzIGlzIGEgc21hbGwgUGFkdWEsIHdobyB3YXMgc29sZCBieSBoaXMgcGFyZW50cyB0byBhIGNvbXBhbnkgb2YgYWNyb2JhdHMgYW5kIGhhZCBiZWVuIGZvcmNlZCwgaW4gb3JkZXIgdG8gZmVlZCB0aGVtc2VsdmVzLCB0byBkbyBhbGwgdGhlIHdvcmsgaW4gdGhlIGNpcmN1cy4gTm93LCBlc2NhcGVkIGR1cmluZyBhIHN0b3BvdmVyIGluIEJhcmNlbG9uYSwg4oCL4oCLdGhlIEl0YWxpYW4gY29uc3VsIGhhZCByZXR1cm5lZC4gUGl0eSBhbmQgZXZlbiBjdXJpb3VzLCBzb21lIGZvcmVpZ24gdHJhdmVsZXJzIGhhdmUgdGhlIGJveSwgd2hvIHJldGlyZWQgaW4gaGlzIGJ1bmssIGhlIGRyZWFtcyBvZiBhIGRlY2VudCBtZWFsLCBhIG5ldyBqYWNrZXQgYW5kIGJyaW5nIHRoZSByZXN0IG9mIHRoZSBtb25leSB0byBwYXJlbnRzIHNvIHBvb3IgdGhhdCBpdCBoYWQgdG8gc2VsbC4gQnV0IHdoZW4gYnkgY2hhbmNlIGhlIGZlZWxzIHRoYXQgdGhvc2UgdHJhdmVsZXJzLCBjaGF0dGluZyB3aXRoIGVhY2ggb3RoZXIsIGdvc3NpcGluZyBhYm91dCBJdGFseSBhbmQgdGhlIEl0YWxpYW5zLCBkbyBub3QgaGVzaXRhdGUgdG8gdGhyb3cgbXkgbW9uZXkgaW4gbXkgZmFjZSwgc2hvdXRpbmcgbm90IHRvIGFjY2VwdCBhbG1zIGZyb20gdGhvc2Ugd2hvIGluc3VsdHMgbXkgY291bnRyeS4iLCJwb3B1bGFyaXR5IjowLjYsInBvc3Rlcl9wYXRoIjpudWxsLCJyZWxlYXNlX2RhdGUiOiIxOTE1LTExLTIxIiwidGl0bGUiOiJUaGUgTGl0dGxlIFBhdHJpb3QgRnJvbSBQYWR1YSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjowLCJ2b3RlX2NvdW50IjowfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiZ2VucmVfaWRzIjpbMTJdLCJpZCI6MzI1NzQ5LCJvcmlnaW5hbF9sYW5ndWFnZSI6Iml0Iiwib3JpZ2luYWxfdGl0bGUiOiJHaW92YW5uaSBkYWxsZSBiYW5kZSBuZXJlIiwib3ZlcnZpZXciOiIiLCJwb3B1bGFyaXR5IjowLjYsInBvc3Rlcl9wYXRoIjoiL2FGYXV1Rmx5Rkx3TWVhSmxKdW5JWnNGY1k2Ty5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTU2LTAxLTAxIiwidGl0bGUiOiJHaW92YW5uaSBkYWxsZSBiYW5kZSBuZXJlIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjQuNSwidm90ZV9jb3VudCI6Mn1dLCJ0b3RhbF9wYWdlcyI6MiwidG90YWxfcmVzdWx0cyI6Mjh9
  recorded_at: Fri, 04 Feb 2022 04:01:47 GMT
recorded_with: VCR 6.0.0
