---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=movie_api_key&language=en-US&page=1&query=The%20Patriot
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.1.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sat, 05 Feb 2022 22:23:29 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 f0b290c4e2273a7586bc6f080031d9bc.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - 2OiyTLOKIm_o5ZXXZcpizlmvlxrn6ahybp_InXqDmknP3kP4UseKcQ==
      Age:
      - '13'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 05 Feb 2022 22:23:42 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=movie_api_key&language=en-US&page=2&query=The%20Patriot
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.1.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sat, 05 Feb 2022 22:23:29 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 045f1e1f031241f3808c557a2b5d6b0a.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - Nqu-ME-hv-k5ccSRDs-nRPgti_X9ZhwZLBCSJODjA6vVqErurPI0dA==
      Age:
      - '12'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoyLCJyZXN1bHRzIjpbeyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6WzEwNzcwLDE4LDM2XSwiaWQiOjgyNzQ2NSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGhlIFBhdHJpb3RzIiwib3ZlcnZpZXciOiJUaG9tYXMgSmVmZmVyc29uIGhhcyBqdXN0IHJldHVybmVkIGZyb20gRnJhbmNlLCBob3BpbmcgdG8gcmVsYXggd2l0aCBoaXMgZGF1Z2h0ZXJzIGF0IE1vbnRpY2VsbG8uIEdlb3JnZSBXYXNoaW5ndG9uIGhvd2V2ZXIsIGhhcyBhIGZhdm9yIHRvIGFzayBvZiBoaW0uIEhpdCBieSB0b3VnaCBwb2xpdGljYWwgb3Bwb3NpdGlvbiwgc3BlY2lmaWNhbGx5IGFmcmFpZCBvZiByaXNpbmcgbW9uYXJjaCBzdHJlbmd0aCwgaGUgdXJnZXMgSmVmZmVyc29uIHRvIGJlY29tZSBoaXMgU2VjcmV0YXJ5IG9mIFN0YXRlLiBKZWZmZXJzb24gYWNjZXB0cywgYWxiZWl0IGdydWRnaW5nbHkuIE5vdCBsb25nIGFmdGVyLCBoZSBpcyBiYXR0bGluZyBoaXMgYXJjaHJpdmFsLCBBbGV4YW5kZXIgSGFtaWx0b24sIGEgRmVkZXJhbGlzdCBqdXN0IGJlZm9yZSBoaXMgZWxlY3Rpb24gaW4gMTgwMC4iLCJwb3B1bGFyaXR5IjoxLjQsInBvc3Rlcl9wYXRoIjpudWxsLCJyZWxlYXNlX2RhdGUiOiIxOTYzLTExLTE1IiwidGl0bGUiOiJUaGUgUGF0cmlvdHMiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6MCwidm90ZV9jb3VudCI6MH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvMURnYU1UU3dzVEc4YlBaYVRQaXpBbldSYlA0LmpwZyIsImdlbnJlX2lkcyI6Wzk5XSwiaWQiOjQxODY5Mywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiTWFyYXRob246IFRoZSBQYXRyaW90cyBEYXkgQm9tYmluZyIsIm92ZXJ2aWV3IjoiUmVjb3VudHMgdGhlIGRyYW1hdGljIHN0b3J5IG9mIHRoZSBBcHJpbCAyMDEzIHRlcnJvcmlzdCBhdHRhY2sgYXQgdGhlIEJvc3RvbiBNYXJhdGhvbiB0aHJvdWdoIHRoZSBleHBlcmllbmNlcyBvZiBpbmRpdmlkdWFscyB3aG9zZSBsaXZlcyB3ZXJlIGFmZmVjdGVkLiBSYW5naW5nIGZyb20gdGhlIGV2ZW50cyBvZiB0aGUgZGF5IHRvIHRoZSBkZWF0aC1wZW5hbHR5IHNlbnRlbmNpbmcgb2YgRHpob2toYXIgVHNhcm5hZXYsIHRoZSBmaWxtIGZlYXR1cmVzIHN1cnZlaWxsYW5jZSBmb290YWdlLCBuZXdzIGNsaXBzLCBob21lIG1vdmllcyBhbmQgZXhjbHVzaXZlIGludGVydmlld3Mgd2l0aCBzdXJ2aXZvcnMgYW5kIHRoZWlyIGZhbWlsaWVzLCBhcyB3ZWxsIGFzIGZpcnN0IHJlc3BvbmRlcnMsIGludmVzdGlnYXRvcnMsIGdvdmVybm1lbnQgb2ZmaWNpYWxzIGFuZCByZXBvcnRlcnMgZnJvbSB0aGUgQm9zdG9uIEdsb2JlLCB3aGljaCB3b24gYSBQdWxpdHplciBQcml6ZSBmb3IgaXRzIGNvdmVyYWdlIG9mIHRoZSBib21iaW5nLiBJbiB0aGUgd2FrZSBvZiB0ZXJyb3Jpc20sIGEgbmV3bHl3ZWQgY291cGxlLCBhIG1vdGhlciBhbmQgZGF1Z2h0ZXIsIGFuZCB0d28gYnJvdGhlcnMgLSBhbGwgZ3JhdmVseSBpbmp1cmVkIGJ5IHRoZSBibGFzdCAtIGZhY2UgdGhlIGNoYWxsZW5nZXMgb2YgcGh5c2ljYWwgYW5kIGVtb3Rpb25hbCByZWNvdmVyeSBhcyB0aGV5IGFuZCB0aGVpciBmYW1pbGllcyBzdHJpdmUgdG8gcmVjbGFpbSB0aGVpciBsaXZlcyBhbmQgY29tbXVuaXRpZXMuIiwicG9wdWxhcml0eSI6My41NTYsInBvc3Rlcl9wYXRoIjoiLzNGajFyZEVSOVhnRnVWcUdlWUpuUGRHdjJXcS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE2LTExLTIxIiwidGl0bGUiOiJNYXJhdGhvbjogVGhlIFBhdHJpb3RzIERheSBCb21iaW5nIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuNywidm90ZV9jb3VudCI6MTh9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOltdLCJpZCI6NjE5MzEyLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgUGF0cmlvdHMiLCJvdmVydmlldyI6IlRoaXMgYWJzb3JiaW5nIDE5NzYgcHJvZHVjdGlvbiBvZiBkcmFtYXRpc3QgU2lkbmV5IEtpbmdzbGV5J3MgaGlzdG9yaWNhbCBwbGF5IGNlbnRlcnMgb24gdGhlIGZvcm1hdGl2ZSBkYXlzIG9mIHRoZSBVbml0ZWQgU3RhdGVzIGFuZCB0aGUgZGlzcHV0ZXMgYmV0d2VlbiBmb3VuZGluZyBmYXRoZXJzIFRob21hcyBKZWZmZXJzb24gYW5kIEFsZXhhbmRlciBIYW1pbHRvbi4gQWx0aG91Z2ggdGhlIHR3byBtZW4gZ3JlYXRseSByZXNwZWN0IGVhY2ggb3RoZXIsIHRoZSBkZWVwLXNlYXRlZCBjbGFzaCBpbiB0aGVpciBpZGVvbG9naWVzIGVuZ2VuZGVycyBjb25mbGljdCBqdXN0IGFzIHRoZSBmbGVkZ2xpbmcgY291bnRyeSBpcyBiZWdpbm5pbmcgdG8gdGFrZSByb290LiIsInBvcHVsYXJpdHkiOjAuNiwicG9zdGVyX3BhdGgiOiIvdXZTUmZqbWZ4bWw2Z29NeUllamNVanNWZUN1LmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5NzYtMDUtMjYiLCJ0aXRsZSI6IlRoZSBQYXRyaW90cyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjowLCJ2b3RlX2NvdW50IjowfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiZ2VucmVfaWRzIjpbOTldLCJpZCI6OTAwMzMwLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJTdW1tZXIgU291bCwgU3Vuc2hpbmUgUGF0cmlvdCwgYW5kIHRoZSBBbWVyaWNhbiBNZXNzYWdlIiwib3ZlcnZpZXciOiJBIGRvY3VtZW50YXJ5IG92ZXIgdGhlIExpYmVydHkgTWFyY2ggaGVsZCBpbiBXYXNoaW5ndG9uIEQuQy4gaW4gMjAwOC4gSW5jbHVkZXMgc3BlZWNoZXMgYnkgUm9uIFBhdWwsIEFkYW0gS29rZXNoLCBKaW0gR3Vlc3QsIGFuZCBHLiBFZHdhcmQgR3JpZmZpbi4iLCJwb3B1bGFyaXR5IjowLjYsInBvc3Rlcl9wYXRoIjoiL3pBVU51R2xaaE5XaWhBekppM0JUbVJTU2ZBQS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDA4LTEwLTAxIiwidGl0bGUiOiJTdW1tZXIgU291bCwgU3Vuc2hpbmUgUGF0cmlvdCwgYW5kIHRoZSBBbWVyaWNhbiBNZXNzYWdlIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjAsInZvdGVfY291bnQiOjB9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOltdLCJpZCI6MzA1MDYzLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJJbCBzb2dubyBwYXRyaW90dGljbyBkaSBDaW5lc3Npbm8iLCJvdmVydmlldyI6IlRoZSBJdGFsaWFuIGNvbG9uaWFsIHdhciBpbiBMaWJ5YSBhcyBzZWVuIHRocm91Z2ggdGhlIGRyZWFtIG9mIGEgY2hpbGQgd2hvJ3MgZmF0aGVyIGluIGF0IHRoZSBmcm9udC4iLCJwb3B1bGFyaXR5IjowLjYsInBvc3Rlcl9wYXRoIjpudWxsLCJyZWxlYXNlX2RhdGUiOiIxOTE1LTExLTIxIiwidGl0bGUiOiJUaGUgUGF0cmlvdGljIERyZWFtIG9mIENpbmVzc2lubyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjUsInZvdGVfY291bnQiOjF9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2hhajJIamFpZ21TdWR2TmNIRWpqeEVTQm1GVi5qcGciLCJnZW5yZV9pZHMiOlsyOCwxOF0sImlkIjo3MjY4MSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJ6aCIsIm9yaWdpbmFsX3RpdGxlIjoiWmhvbmcgeXVhbiBiaWFvIGp1Iiwib3ZlcnZpZXciOiJCcnVjZSBMaSBzdGFycyBhcyBhIGt1bmcgZnUgZmlnaHRlciB3aG8gd2l0aCBhIGdyb3VwIGZyaWVuZHMgZGVmaWVzIHRoZSBDaGluZyBEeW5hc3R5LCB1c2luZyBoaXMgbWFydGlhbCBhcnRzIGFuZCBzZW5zZSBvZiBob25vciBoZSBzdWNjZWVkcyB0aG91Z2ggbm90IHdpdGhvdXQgc29tZSBwZXJzb25hbCBsb3NzZXMuIiwicG9wdWxhcml0eSI6MS4wOCwicG9zdGVyX3BhdGgiOiIveWM2RzFkODhQYzVMdGVHaHdHTEZPVWRUOVJ5LmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5NzYtMDEtMDEiLCJ0aXRsZSI6IlRoZSBNaW5nIFBhdHJpb3RzIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjQuOSwidm90ZV9jb3VudCI6NH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6W10sImlkIjozMDUwNjIsIm9yaWdpbmFsX2xhbmd1YWdlIjoieHgiLCJvcmlnaW5hbF90aXRsZSI6IklsIHBpY2NvbG8gcGF0cmlvdGEgcGFkb3Zhbm8iLCJvdmVydmlldyI6Ik9uIGEgc2hpcCBib3VuZCBmb3IgR2Vub2EgdGhlcmUgaXMgYSBib3kgaW4gcmFncyBpcyBhIHNtYWxsIFBhZHVhLCB3aG8gd2FzIHNvbGQgYnkgaGlzIHBhcmVudHMgdG8gYSBjb21wYW55IG9mIGFjcm9iYXRzIGFuZCBoYWQgYmVlbiBmb3JjZWQsIGluIG9yZGVyIHRvIGZlZWQgdGhlbXNlbHZlcywgdG8gZG8gYWxsIHRoZSB3b3JrIGluIHRoZSBjaXJjdXMuIE5vdywgZXNjYXBlZCBkdXJpbmcgYSBzdG9wb3ZlciBpbiBCYXJjZWxvbmEsIOKAi+KAi3RoZSBJdGFsaWFuIGNvbnN1bCBoYWQgcmV0dXJuZWQuIFBpdHkgYW5kIGV2ZW4gY3VyaW91cywgc29tZSBmb3JlaWduIHRyYXZlbGVycyBoYXZlIHRoZSBib3ksIHdobyByZXRpcmVkIGluIGhpcyBidW5rLCBoZSBkcmVhbXMgb2YgYSBkZWNlbnQgbWVhbCwgYSBuZXcgamFja2V0IGFuZCBicmluZyB0aGUgcmVzdCBvZiB0aGUgbW9uZXkgdG8gcGFyZW50cyBzbyBwb29yIHRoYXQgaXQgaGFkIHRvIHNlbGwuIEJ1dCB3aGVuIGJ5IGNoYW5jZSBoZSBmZWVscyB0aGF0IHRob3NlIHRyYXZlbGVycywgY2hhdHRpbmcgd2l0aCBlYWNoIG90aGVyLCBnb3NzaXBpbmcgYWJvdXQgSXRhbHkgYW5kIHRoZSBJdGFsaWFucywgZG8gbm90IGhlc2l0YXRlIHRvIHRocm93IG15IG1vbmV5IGluIG15IGZhY2UsIHNob3V0aW5nIG5vdCB0byBhY2NlcHQgYWxtcyBmcm9tIHRob3NlIHdobyBpbnN1bHRzIG15IGNvdW50cnkuIiwicG9wdWxhcml0eSI6MC42LCJwb3N0ZXJfcGF0aCI6bnVsbCwicmVsZWFzZV9kYXRlIjoiMTkxNS0xMS0yMSIsInRpdGxlIjoiVGhlIExpdHRsZSBQYXRyaW90IEZyb20gUGFkdWEiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6MCwidm90ZV9jb3VudCI6MH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6WzEyXSwiaWQiOjMyNTc0OSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJpdCIsIm9yaWdpbmFsX3RpdGxlIjoiR2lvdmFubmkgZGFsbGUgYmFuZGUgbmVyZSIsIm92ZXJ2aWV3IjoiIiwicG9wdWxhcml0eSI6MC45MDEsInBvc3Rlcl9wYXRoIjoiL2FGYXV1Rmx5Rkx3TWVhSmxKdW5JWnNGY1k2Ty5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTU2LTAxLTAxIiwidGl0bGUiOiJHaW92YW5uaSBkYWxsZSBiYW5kZSBuZXJlIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjQuNSwidm90ZV9jb3VudCI6Mn1dLCJ0b3RhbF9wYWdlcyI6MiwidG90YWxfcmVzdWx0cyI6Mjh9
  recorded_at: Sat, 05 Feb 2022 22:23:42 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=movie_api_key&language=en-US&page=1&query=The%20Patriot
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.1.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sat, 05 Feb 2022 22:23:29 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 ce4b35590464ed34415a13badd946eba.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - _1CF6w8MvVH4L4AI4e0C0zmO1aHKNhXCCpfojfIOmcG9pGhld-oImA==
      Age:
      - '13'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 05 Feb 2022 22:23:42 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=movie_api_key&language=en-US&page=2&query=The%20Patriot
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.1.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sat, 05 Feb 2022 22:23:29 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 b2e880ac67c1fba390623b9fc04bd63a.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - XcLtEPfy77NZWhx_mk5dmC3Y0XmXAHcOJ5OkrkCh-5QAOss7s5DxrQ==
      Age:
      - '12'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoyLCJyZXN1bHRzIjpbeyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6WzEwNzcwLDE4LDM2XSwiaWQiOjgyNzQ2NSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGhlIFBhdHJpb3RzIiwib3ZlcnZpZXciOiJUaG9tYXMgSmVmZmVyc29uIGhhcyBqdXN0IHJldHVybmVkIGZyb20gRnJhbmNlLCBob3BpbmcgdG8gcmVsYXggd2l0aCBoaXMgZGF1Z2h0ZXJzIGF0IE1vbnRpY2VsbG8uIEdlb3JnZSBXYXNoaW5ndG9uIGhvd2V2ZXIsIGhhcyBhIGZhdm9yIHRvIGFzayBvZiBoaW0uIEhpdCBieSB0b3VnaCBwb2xpdGljYWwgb3Bwb3NpdGlvbiwgc3BlY2lmaWNhbGx5IGFmcmFpZCBvZiByaXNpbmcgbW9uYXJjaCBzdHJlbmd0aCwgaGUgdXJnZXMgSmVmZmVyc29uIHRvIGJlY29tZSBoaXMgU2VjcmV0YXJ5IG9mIFN0YXRlLiBKZWZmZXJzb24gYWNjZXB0cywgYWxiZWl0IGdydWRnaW5nbHkuIE5vdCBsb25nIGFmdGVyLCBoZSBpcyBiYXR0bGluZyBoaXMgYXJjaHJpdmFsLCBBbGV4YW5kZXIgSGFtaWx0b24sIGEgRmVkZXJhbGlzdCBqdXN0IGJlZm9yZSBoaXMgZWxlY3Rpb24gaW4gMTgwMC4iLCJwb3B1bGFyaXR5IjoxLjQsInBvc3Rlcl9wYXRoIjpudWxsLCJyZWxlYXNlX2RhdGUiOiIxOTYzLTExLTE1IiwidGl0bGUiOiJUaGUgUGF0cmlvdHMiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6MCwidm90ZV9jb3VudCI6MH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvMURnYU1UU3dzVEc4YlBaYVRQaXpBbldSYlA0LmpwZyIsImdlbnJlX2lkcyI6Wzk5XSwiaWQiOjQxODY5Mywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiTWFyYXRob246IFRoZSBQYXRyaW90cyBEYXkgQm9tYmluZyIsIm92ZXJ2aWV3IjoiUmVjb3VudHMgdGhlIGRyYW1hdGljIHN0b3J5IG9mIHRoZSBBcHJpbCAyMDEzIHRlcnJvcmlzdCBhdHRhY2sgYXQgdGhlIEJvc3RvbiBNYXJhdGhvbiB0aHJvdWdoIHRoZSBleHBlcmllbmNlcyBvZiBpbmRpdmlkdWFscyB3aG9zZSBsaXZlcyB3ZXJlIGFmZmVjdGVkLiBSYW5naW5nIGZyb20gdGhlIGV2ZW50cyBvZiB0aGUgZGF5IHRvIHRoZSBkZWF0aC1wZW5hbHR5IHNlbnRlbmNpbmcgb2YgRHpob2toYXIgVHNhcm5hZXYsIHRoZSBmaWxtIGZlYXR1cmVzIHN1cnZlaWxsYW5jZSBmb290YWdlLCBuZXdzIGNsaXBzLCBob21lIG1vdmllcyBhbmQgZXhjbHVzaXZlIGludGVydmlld3Mgd2l0aCBzdXJ2aXZvcnMgYW5kIHRoZWlyIGZhbWlsaWVzLCBhcyB3ZWxsIGFzIGZpcnN0IHJlc3BvbmRlcnMsIGludmVzdGlnYXRvcnMsIGdvdmVybm1lbnQgb2ZmaWNpYWxzIGFuZCByZXBvcnRlcnMgZnJvbSB0aGUgQm9zdG9uIEdsb2JlLCB3aGljaCB3b24gYSBQdWxpdHplciBQcml6ZSBmb3IgaXRzIGNvdmVyYWdlIG9mIHRoZSBib21iaW5nLiBJbiB0aGUgd2FrZSBvZiB0ZXJyb3Jpc20sIGEgbmV3bHl3ZWQgY291cGxlLCBhIG1vdGhlciBhbmQgZGF1Z2h0ZXIsIGFuZCB0d28gYnJvdGhlcnMgLSBhbGwgZ3JhdmVseSBpbmp1cmVkIGJ5IHRoZSBibGFzdCAtIGZhY2UgdGhlIGNoYWxsZW5nZXMgb2YgcGh5c2ljYWwgYW5kIGVtb3Rpb25hbCByZWNvdmVyeSBhcyB0aGV5IGFuZCB0aGVpciBmYW1pbGllcyBzdHJpdmUgdG8gcmVjbGFpbSB0aGVpciBsaXZlcyBhbmQgY29tbXVuaXRpZXMuIiwicG9wdWxhcml0eSI6My41NTYsInBvc3Rlcl9wYXRoIjoiLzNGajFyZEVSOVhnRnVWcUdlWUpuUGRHdjJXcS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE2LTExLTIxIiwidGl0bGUiOiJNYXJhdGhvbjogVGhlIFBhdHJpb3RzIERheSBCb21iaW5nIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuNywidm90ZV9jb3VudCI6MTh9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOltdLCJpZCI6NjE5MzEyLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgUGF0cmlvdHMiLCJvdmVydmlldyI6IlRoaXMgYWJzb3JiaW5nIDE5NzYgcHJvZHVjdGlvbiBvZiBkcmFtYXRpc3QgU2lkbmV5IEtpbmdzbGV5J3MgaGlzdG9yaWNhbCBwbGF5IGNlbnRlcnMgb24gdGhlIGZvcm1hdGl2ZSBkYXlzIG9mIHRoZSBVbml0ZWQgU3RhdGVzIGFuZCB0aGUgZGlzcHV0ZXMgYmV0d2VlbiBmb3VuZGluZyBmYXRoZXJzIFRob21hcyBKZWZmZXJzb24gYW5kIEFsZXhhbmRlciBIYW1pbHRvbi4gQWx0aG91Z2ggdGhlIHR3byBtZW4gZ3JlYXRseSByZXNwZWN0IGVhY2ggb3RoZXIsIHRoZSBkZWVwLXNlYXRlZCBjbGFzaCBpbiB0aGVpciBpZGVvbG9naWVzIGVuZ2VuZGVycyBjb25mbGljdCBqdXN0IGFzIHRoZSBmbGVkZ2xpbmcgY291bnRyeSBpcyBiZWdpbm5pbmcgdG8gdGFrZSByb290LiIsInBvcHVsYXJpdHkiOjAuNiwicG9zdGVyX3BhdGgiOiIvdXZTUmZqbWZ4bWw2Z29NeUllamNVanNWZUN1LmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5NzYtMDUtMjYiLCJ0aXRsZSI6IlRoZSBQYXRyaW90cyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjowLCJ2b3RlX2NvdW50IjowfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiZ2VucmVfaWRzIjpbOTldLCJpZCI6OTAwMzMwLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJTdW1tZXIgU291bCwgU3Vuc2hpbmUgUGF0cmlvdCwgYW5kIHRoZSBBbWVyaWNhbiBNZXNzYWdlIiwib3ZlcnZpZXciOiJBIGRvY3VtZW50YXJ5IG92ZXIgdGhlIExpYmVydHkgTWFyY2ggaGVsZCBpbiBXYXNoaW5ndG9uIEQuQy4gaW4gMjAwOC4gSW5jbHVkZXMgc3BlZWNoZXMgYnkgUm9uIFBhdWwsIEFkYW0gS29rZXNoLCBKaW0gR3Vlc3QsIGFuZCBHLiBFZHdhcmQgR3JpZmZpbi4iLCJwb3B1bGFyaXR5IjowLjYsInBvc3Rlcl9wYXRoIjoiL3pBVU51R2xaaE5XaWhBekppM0JUbVJTU2ZBQS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDA4LTEwLTAxIiwidGl0bGUiOiJTdW1tZXIgU291bCwgU3Vuc2hpbmUgUGF0cmlvdCwgYW5kIHRoZSBBbWVyaWNhbiBNZXNzYWdlIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjAsInZvdGVfY291bnQiOjB9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOltdLCJpZCI6MzA1MDYzLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJJbCBzb2dubyBwYXRyaW90dGljbyBkaSBDaW5lc3Npbm8iLCJvdmVydmlldyI6IlRoZSBJdGFsaWFuIGNvbG9uaWFsIHdhciBpbiBMaWJ5YSBhcyBzZWVuIHRocm91Z2ggdGhlIGRyZWFtIG9mIGEgY2hpbGQgd2hvJ3MgZmF0aGVyIGluIGF0IHRoZSBmcm9udC4iLCJwb3B1bGFyaXR5IjowLjYsInBvc3Rlcl9wYXRoIjpudWxsLCJyZWxlYXNlX2RhdGUiOiIxOTE1LTExLTIxIiwidGl0bGUiOiJUaGUgUGF0cmlvdGljIERyZWFtIG9mIENpbmVzc2lubyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjUsInZvdGVfY291bnQiOjF9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2hhajJIamFpZ21TdWR2TmNIRWpqeEVTQm1GVi5qcGciLCJnZW5yZV9pZHMiOlsyOCwxOF0sImlkIjo3MjY4MSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJ6aCIsIm9yaWdpbmFsX3RpdGxlIjoiWmhvbmcgeXVhbiBiaWFvIGp1Iiwib3ZlcnZpZXciOiJCcnVjZSBMaSBzdGFycyBhcyBhIGt1bmcgZnUgZmlnaHRlciB3aG8gd2l0aCBhIGdyb3VwIGZyaWVuZHMgZGVmaWVzIHRoZSBDaGluZyBEeW5hc3R5LCB1c2luZyBoaXMgbWFydGlhbCBhcnRzIGFuZCBzZW5zZSBvZiBob25vciBoZSBzdWNjZWVkcyB0aG91Z2ggbm90IHdpdGhvdXQgc29tZSBwZXJzb25hbCBsb3NzZXMuIiwicG9wdWxhcml0eSI6MS4wOCwicG9zdGVyX3BhdGgiOiIveWM2RzFkODhQYzVMdGVHaHdHTEZPVWRUOVJ5LmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5NzYtMDEtMDEiLCJ0aXRsZSI6IlRoZSBNaW5nIFBhdHJpb3RzIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjQuOSwidm90ZV9jb3VudCI6NH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6W10sImlkIjozMDUwNjIsIm9yaWdpbmFsX2xhbmd1YWdlIjoieHgiLCJvcmlnaW5hbF90aXRsZSI6IklsIHBpY2NvbG8gcGF0cmlvdGEgcGFkb3Zhbm8iLCJvdmVydmlldyI6Ik9uIGEgc2hpcCBib3VuZCBmb3IgR2Vub2EgdGhlcmUgaXMgYSBib3kgaW4gcmFncyBpcyBhIHNtYWxsIFBhZHVhLCB3aG8gd2FzIHNvbGQgYnkgaGlzIHBhcmVudHMgdG8gYSBjb21wYW55IG9mIGFjcm9iYXRzIGFuZCBoYWQgYmVlbiBmb3JjZWQsIGluIG9yZGVyIHRvIGZlZWQgdGhlbXNlbHZlcywgdG8gZG8gYWxsIHRoZSB3b3JrIGluIHRoZSBjaXJjdXMuIE5vdywgZXNjYXBlZCBkdXJpbmcgYSBzdG9wb3ZlciBpbiBCYXJjZWxvbmEsIOKAi+KAi3RoZSBJdGFsaWFuIGNvbnN1bCBoYWQgcmV0dXJuZWQuIFBpdHkgYW5kIGV2ZW4gY3VyaW91cywgc29tZSBmb3JlaWduIHRyYXZlbGVycyBoYXZlIHRoZSBib3ksIHdobyByZXRpcmVkIGluIGhpcyBidW5rLCBoZSBkcmVhbXMgb2YgYSBkZWNlbnQgbWVhbCwgYSBuZXcgamFja2V0IGFuZCBicmluZyB0aGUgcmVzdCBvZiB0aGUgbW9uZXkgdG8gcGFyZW50cyBzbyBwb29yIHRoYXQgaXQgaGFkIHRvIHNlbGwuIEJ1dCB3aGVuIGJ5IGNoYW5jZSBoZSBmZWVscyB0aGF0IHRob3NlIHRyYXZlbGVycywgY2hhdHRpbmcgd2l0aCBlYWNoIG90aGVyLCBnb3NzaXBpbmcgYWJvdXQgSXRhbHkgYW5kIHRoZSBJdGFsaWFucywgZG8gbm90IGhlc2l0YXRlIHRvIHRocm93IG15IG1vbmV5IGluIG15IGZhY2UsIHNob3V0aW5nIG5vdCB0byBhY2NlcHQgYWxtcyBmcm9tIHRob3NlIHdobyBpbnN1bHRzIG15IGNvdW50cnkuIiwicG9wdWxhcml0eSI6MC42LCJwb3N0ZXJfcGF0aCI6bnVsbCwicmVsZWFzZV9kYXRlIjoiMTkxNS0xMS0yMSIsInRpdGxlIjoiVGhlIExpdHRsZSBQYXRyaW90IEZyb20gUGFkdWEiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6MCwidm90ZV9jb3VudCI6MH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6WzEyXSwiaWQiOjMyNTc0OSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJpdCIsIm9yaWdpbmFsX3RpdGxlIjoiR2lvdmFubmkgZGFsbGUgYmFuZGUgbmVyZSIsIm92ZXJ2aWV3IjoiIiwicG9wdWxhcml0eSI6MC45MDEsInBvc3Rlcl9wYXRoIjoiL2FGYXV1Rmx5Rkx3TWVhSmxKdW5JWnNGY1k2Ty5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTU2LTAxLTAxIiwidGl0bGUiOiJHaW92YW5uaSBkYWxsZSBiYW5kZSBuZXJlIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjQuNSwidm90ZV9jb3VudCI6Mn1dLCJ0b3RhbF9wYWdlcyI6MiwidG90YWxfcmVzdWx0cyI6Mjh9
  recorded_at: Sat, 05 Feb 2022 22:23:42 GMT
recorded_with: VCR 6.0.0
