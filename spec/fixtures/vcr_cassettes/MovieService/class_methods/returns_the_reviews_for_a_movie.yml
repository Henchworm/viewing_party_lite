---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/33/reviews?api_key=movie_api_key&language=en-US&page=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.1.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 03 Feb 2022 20:31:49 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=28800
      X-Memc:
      - MISS, STORE
      X-Memc-Key:
      - d1dee2dadb696f6afeecce24abaa6a0e1d7b359c
      X-Memc-Age:
      - '0'
      X-Memc-Expires:
      - '16816'
      Last-Modified:
      - '2021-11-28 19:32:11 +0000'
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 dc50b0effd72a7b2c19bcb0909cfae82.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - u1r97Wrqgqm-KUCjAnyPHZ8lFJmm9dRDjCkdwgCq_R9I0OTacgLWBg==
      Age:
      - '7033'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 03 Feb 2022 22:29:01 GMT
recorded_with: VCR 6.0.0
